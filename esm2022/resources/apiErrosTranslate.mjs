/**
 * Dicionário de códigos de erro da API com as respectivas mensagens de erro.
 */
export const apiErrosTranslate = {
    'application/validations-fail': 'Falha de validação, verifique os dados e tente novamente!',
    'application/token-missing': 'Ops! Houve um erro, renicie a pagina e tente novamente!',
    'application/token-malformatted': 'Ops! Houve um erro, renicie a pagina e tente novamente!',
    'application/invalid-token': 'Ops! Houve um erro, renicie a pagina e tente novamente!',
    'application/without-permission': 'Ops! Parece que você não tem permissões para realizar esta ação!',
    'application/without-permission-level': 'Você não permissões suficientes para realizar esta ação.',
    'application/document-not-found': 'Ops! Houve um erro, renicie a pagina e tente novamente!',
    'application/documen-without-identifier': 'Ops! Houve um erro, renicie a pagina e tente novamente!',
    'application/need-credit': 'Ops! Houve um erro, renicie a pagina e tente novamente!',
    'auth/email-already-in-use': 'Este endereço de e-mail já está sendo utilizado.',
    'auth/weak-password': 'Sua senha não é forte o suficiente. Adicione números, letras maiúsculas e minúsculas.',
    'auth/invalid-email': 'O endereço e-mail é invalido.',
    'auth/account-exists-with-different-credential': 'E-mail já registrado! realize o login com e-mail e senha.',
    'auth/email-already-exists': 'Este endereço de e-mail já está sendo utilizado.',
    'auth/invalid-credential': 'Sua credencial está inválida.',
    'auth/wrong-password': 'O e-mail ou senha está inválido.',
    'auth/user-not-found': 'O e-mail ou senha está inválido.',
    'auth/user-mismatch': 'O e-mail ou senha está inválido.',
    'auth/invalid-verification-code': 'O código da verificação está inválido.',
    'auth/invalid-verification-id': 'Sua credencial está inválida.',
    'auth/requires-recent-login': 'Por favor deslogue do aplicativo e entre novamente.'
};
/**
 * Retorna a mensagem de erro correspondente a um determinado código de erro.
 *
 * @param errorCode O código de erro.
 * @param defaultMessage A mensagem de erro padrão a ser usada se não houver nenhuma mensagem correspondente ao código de erro fornecido.
 * @returns A mensagem de erro correspondente ao código de erro fornecido, ou a mensagem de erro padrão se não houver nenhuma mensagem correspondente.
 */
export function getApiError(errorCode, defaultMessage = 'Não foi possível concluir sua solicitação, por favor tente novamente.') {
    return apiErrosTranslate[errorCode] ?? defaultMessage;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBpRXJyb3NUcmFuc2xhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcmVzb3VyY2VzL2FwaUVycm9zVHJhbnNsYXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQTJCO0lBQ3ZELDhCQUE4QixFQUFFLDJEQUEyRDtJQUMzRiwyQkFBMkIsRUFBRSx5REFBeUQ7SUFDdEYsZ0NBQWdDLEVBQUUseURBQXlEO0lBQzNGLDJCQUEyQixFQUFFLHlEQUF5RDtJQUN0RixnQ0FBZ0MsRUFBRSxrRUFBa0U7SUFDcEcsc0NBQXNDLEVBQUUsMERBQTBEO0lBQ2xHLGdDQUFnQyxFQUFFLHlEQUF5RDtJQUMzRix3Q0FBd0MsRUFBRSx5REFBeUQ7SUFDbkcseUJBQXlCLEVBQUUseURBQXlEO0lBRXBGLDJCQUEyQixFQUFFLGtEQUFrRDtJQUMvRSxvQkFBb0IsRUFBRSx1RkFBdUY7SUFDN0csb0JBQW9CLEVBQUUsK0JBQStCO0lBQ3JELCtDQUErQyxFQUFFLDJEQUEyRDtJQUM1RywyQkFBMkIsRUFBRSxrREFBa0Q7SUFDL0UseUJBQXlCLEVBQUUsK0JBQStCO0lBQzFELHFCQUFxQixFQUFFLGtDQUFrQztJQUN6RCxxQkFBcUIsRUFBRSxrQ0FBa0M7SUFDekQsb0JBQW9CLEVBQUUsa0NBQWtDO0lBQ3hELGdDQUFnQyxFQUFFLHdDQUF3QztJQUMxRSw4QkFBOEIsRUFBRSwrQkFBK0I7SUFDL0QsNEJBQTRCLEVBQUUscURBQXFEO0NBQ3BGLENBQUM7QUFFRjs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsV0FBVyxDQUN6QixTQUFpQixFQUNqQixjQUFjLEdBQUcsdUVBQXVFO0lBRXhGLE9BQU8saUJBQWlCLENBQUMsU0FBUyxDQUFDLElBQUksY0FBYyxDQUFDO0FBQ3hELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogRGljaW9uw6FyaW8gZGUgY8OzZGlnb3MgZGUgZXJybyBkYSBBUEkgY29tIGFzIHJlc3BlY3RpdmFzIG1lbnNhZ2VucyBkZSBlcnJvLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGFwaUVycm9zVHJhbnNsYXRlOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+ID0ge1xyXG4gICdhcHBsaWNhdGlvbi92YWxpZGF0aW9ucy1mYWlsJzogJ0ZhbGhhIGRlIHZhbGlkYcOnw6NvLCB2ZXJpZmlxdWUgb3MgZGFkb3MgZSB0ZW50ZSBub3ZhbWVudGUhJyxcclxuICAnYXBwbGljYXRpb24vdG9rZW4tbWlzc2luZyc6ICdPcHMhIEhvdXZlIHVtIGVycm8sIHJlbmljaWUgYSBwYWdpbmEgZSB0ZW50ZSBub3ZhbWVudGUhJyxcclxuICAnYXBwbGljYXRpb24vdG9rZW4tbWFsZm9ybWF0dGVkJzogJ09wcyEgSG91dmUgdW0gZXJybywgcmVuaWNpZSBhIHBhZ2luYSBlIHRlbnRlIG5vdmFtZW50ZSEnLFxyXG4gICdhcHBsaWNhdGlvbi9pbnZhbGlkLXRva2VuJzogJ09wcyEgSG91dmUgdW0gZXJybywgcmVuaWNpZSBhIHBhZ2luYSBlIHRlbnRlIG5vdmFtZW50ZSEnLFxyXG4gICdhcHBsaWNhdGlvbi93aXRob3V0LXBlcm1pc3Npb24nOiAnT3BzISBQYXJlY2UgcXVlIHZvY8OqIG7Do28gdGVtIHBlcm1pc3PDtWVzIHBhcmEgcmVhbGl6YXIgZXN0YSBhw6fDo28hJyxcclxuICAnYXBwbGljYXRpb24vd2l0aG91dC1wZXJtaXNzaW9uLWxldmVsJzogJ1ZvY8OqIG7Do28gcGVybWlzc8O1ZXMgc3VmaWNpZW50ZXMgcGFyYSByZWFsaXphciBlc3RhIGHDp8Ojby4nLFxyXG4gICdhcHBsaWNhdGlvbi9kb2N1bWVudC1ub3QtZm91bmQnOiAnT3BzISBIb3V2ZSB1bSBlcnJvLCByZW5pY2llIGEgcGFnaW5hIGUgdGVudGUgbm92YW1lbnRlIScsXHJcbiAgJ2FwcGxpY2F0aW9uL2RvY3VtZW4td2l0aG91dC1pZGVudGlmaWVyJzogJ09wcyEgSG91dmUgdW0gZXJybywgcmVuaWNpZSBhIHBhZ2luYSBlIHRlbnRlIG5vdmFtZW50ZSEnLFxyXG4gICdhcHBsaWNhdGlvbi9uZWVkLWNyZWRpdCc6ICdPcHMhIEhvdXZlIHVtIGVycm8sIHJlbmljaWUgYSBwYWdpbmEgZSB0ZW50ZSBub3ZhbWVudGUhJyxcclxuXHJcbiAgJ2F1dGgvZW1haWwtYWxyZWFkeS1pbi11c2UnOiAnRXN0ZSBlbmRlcmXDp28gZGUgZS1tYWlsIGrDoSBlc3TDoSBzZW5kbyB1dGlsaXphZG8uJyxcclxuICAnYXV0aC93ZWFrLXBhc3N3b3JkJzogJ1N1YSBzZW5oYSBuw6NvIMOpIGZvcnRlIG8gc3VmaWNpZW50ZS4gQWRpY2lvbmUgbsO6bWVyb3MsIGxldHJhcyBtYWnDunNjdWxhcyBlIG1pbsO6c2N1bGFzLicsXHJcbiAgJ2F1dGgvaW52YWxpZC1lbWFpbCc6ICdPIGVuZGVyZcOnbyBlLW1haWwgw6kgaW52YWxpZG8uJyxcclxuICAnYXV0aC9hY2NvdW50LWV4aXN0cy13aXRoLWRpZmZlcmVudC1jcmVkZW50aWFsJzogJ0UtbWFpbCBqw6EgcmVnaXN0cmFkbyEgcmVhbGl6ZSBvIGxvZ2luIGNvbSBlLW1haWwgZSBzZW5oYS4nLFxyXG4gICdhdXRoL2VtYWlsLWFscmVhZHktZXhpc3RzJzogJ0VzdGUgZW5kZXJlw6dvIGRlIGUtbWFpbCBqw6EgZXN0w6Egc2VuZG8gdXRpbGl6YWRvLicsXHJcbiAgJ2F1dGgvaW52YWxpZC1jcmVkZW50aWFsJzogJ1N1YSBjcmVkZW5jaWFsIGVzdMOhIGludsOhbGlkYS4nLFxyXG4gICdhdXRoL3dyb25nLXBhc3N3b3JkJzogJ08gZS1tYWlsIG91IHNlbmhhIGVzdMOhIGludsOhbGlkby4nLFxyXG4gICdhdXRoL3VzZXItbm90LWZvdW5kJzogJ08gZS1tYWlsIG91IHNlbmhhIGVzdMOhIGludsOhbGlkby4nLFxyXG4gICdhdXRoL3VzZXItbWlzbWF0Y2gnOiAnTyBlLW1haWwgb3Ugc2VuaGEgZXN0w6EgaW52w6FsaWRvLicsXHJcbiAgJ2F1dGgvaW52YWxpZC12ZXJpZmljYXRpb24tY29kZSc6ICdPIGPDs2RpZ28gZGEgdmVyaWZpY2HDp8OjbyBlc3TDoSBpbnbDoWxpZG8uJyxcclxuICAnYXV0aC9pbnZhbGlkLXZlcmlmaWNhdGlvbi1pZCc6ICdTdWEgY3JlZGVuY2lhbCBlc3TDoSBpbnbDoWxpZGEuJyxcclxuICAnYXV0aC9yZXF1aXJlcy1yZWNlbnQtbG9naW4nOiAnUG9yIGZhdm9yIGRlc2xvZ3VlIGRvIGFwbGljYXRpdm8gZSBlbnRyZSBub3ZhbWVudGUuJ1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIFJldG9ybmEgYSBtZW5zYWdlbSBkZSBlcnJvIGNvcnJlc3BvbmRlbnRlIGEgdW0gZGV0ZXJtaW5hZG8gY8OzZGlnbyBkZSBlcnJvLlxyXG4gKlxyXG4gKiBAcGFyYW0gZXJyb3JDb2RlIE8gY8OzZGlnbyBkZSBlcnJvLlxyXG4gKiBAcGFyYW0gZGVmYXVsdE1lc3NhZ2UgQSBtZW5zYWdlbSBkZSBlcnJvIHBhZHLDo28gYSBzZXIgdXNhZGEgc2UgbsOjbyBob3V2ZXIgbmVuaHVtYSBtZW5zYWdlbSBjb3JyZXNwb25kZW50ZSBhbyBjw7NkaWdvIGRlIGVycm8gZm9ybmVjaWRvLlxyXG4gKiBAcmV0dXJucyBBIG1lbnNhZ2VtIGRlIGVycm8gY29ycmVzcG9uZGVudGUgYW8gY8OzZGlnbyBkZSBlcnJvIGZvcm5lY2lkbywgb3UgYSBtZW5zYWdlbSBkZSBlcnJvIHBhZHLDo28gc2UgbsOjbyBob3V2ZXIgbmVuaHVtYSBtZW5zYWdlbSBjb3JyZXNwb25kZW50ZS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRBcGlFcnJvcihcclxuICBlcnJvckNvZGU6IHN0cmluZyxcclxuICBkZWZhdWx0TWVzc2FnZSA9ICdOw6NvIGZvaSBwb3Nzw612ZWwgY29uY2x1aXIgc3VhIHNvbGljaXRhw6fDo28sIHBvciBmYXZvciB0ZW50ZSBub3ZhbWVudGUuJ1xyXG4pOiBzdHJpbmcge1xyXG4gIHJldHVybiBhcGlFcnJvc1RyYW5zbGF0ZVtlcnJvckNvZGVdID8/IGRlZmF1bHRNZXNzYWdlO1xyXG59XHJcbiJdfQ==