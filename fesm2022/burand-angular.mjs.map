{"version":3,"file":"burand-angular.mjs","sources":["../../src/directives/img-fallback.directive.ts","../../src/resources/apiErrosTranslate.ts","../../src/exceptions/ApiError.ts","../../src/exceptions/AppError.ts","../../src/exceptions/DocumentNotFoundError.ts","../../src/firestore/toNativeTypes.ts","../../src/firestore/ofFirestore.ts","../../src/firestore/toFirestore.ts","../../src/firestore/FirebaseAbstract.ts","../../src/utils/calculateAge.ts","../../src/pipes/age.pipe.ts","../../src/pipes/filter.pipe.ts","../../src/pipes/safe.pipe.ts","../../src/utils/abbreviateLastName.ts","../../src/pipes/short-name.pipe.ts","../../src/pipes/time-ago.pipe.ts","../../src/resources/errorTailorConfig.ts","../../src/utils/base64ToFile.ts","../../src/utils/inputUUID.ts","../../src/utils/LocalStorage.ts","../../src/utils/readFileAsDataURL.ts","../../src/utils/removeAccents.ts","../../src/utils/removeNonDigits.ts","../../src/validators/cnpj.ts","../../src/validators/cpf.ts","../../src/validators/email.ts","../../src/validators/fullName.ts","../../src/burand-angular.ts"],"sourcesContent":["import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n\r\n/**\r\n * Uma diretiva que lida com erros de carregamento de imagem e substitui a fonte da imagem por um URL de fallback.\r\n *\r\n * @example\r\n * Aplique o atributo `fallback` a um elemento `img` ou `ion-img` para usar a diretiva:\r\n * ```html\r\n * // native HTML\r\n * <img src=\"image-url.jpg\" fallback=\"fallback-image-url.jpg\" [retry]=\"2\" />\r\n *\r\n * // ionic\r\n * <ion-img src=\"image-url.jpg\" fallback=\"fallback-image-url.jpg\" [retry]=\"2\" />\r\n * ```\r\n */\r\n@Directive({\r\n  standalone: true,\r\n  selector: 'img[fallback], ion-img[fallback]'\r\n})\r\nexport class ImgFallbackDirective {\r\n  /**\r\n   * A URL de fallback a ser usada quando a origem da imagem original falha ao carregar.\r\n   */\r\n  @Input() fallback = '';\r\n\r\n  /**\r\n   * O número de vezes para tentar carregar novamente a fonte da imagem original antes de usar o URL de fallback.\r\n   */\r\n  @Input() retry = 0;\r\n\r\n  private currentRetry = 0;\r\n\r\n  constructor(private eRef: ElementRef<HTMLImageElement>) {}\r\n\r\n  @HostListener('error')\r\n  @HostListener('ionError')\r\n  loadFallbackOnError() {\r\n    const { nativeElement } = this.eRef;\r\n\r\n    const defaultUrl =\r\n      this.fallback ||\r\n      \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25'%3E%3Crect width='100%25' height='100%25' fill='%23f1f1f1'/%3E%3C/svg%3E\";\r\n\r\n    const originalSrc = nativeElement.src;\r\n\r\n    if (originalSrc === `${window.location.origin}/`) {\r\n      nativeElement.src = defaultUrl;\r\n      return;\r\n    }\r\n\r\n    if (this.currentRetry !== this.retry) {\r\n      this.currentRetry += 1;\r\n      nativeElement.src = defaultUrl;\r\n\r\n      setTimeout(() => {\r\n        nativeElement.src = originalSrc;\r\n      }, 1500);\r\n    } else {\r\n      nativeElement.src = defaultUrl;\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Dicionário de códigos de erro da API com as respectivas mensagens de erro.\r\n */\r\nexport const apiErrosTranslate: Record<string, string> = {\r\n  'application/validations-fail': 'Falha de validação, verifique os dados e tente novamente!',\r\n  'application/token-missing': 'Ops! Houve um erro, renicie a pagina e tente novamente!',\r\n  'application/token-malformatted': 'Ops! Houve um erro, renicie a pagina e tente novamente!',\r\n  'application/invalid-token': 'Ops! Houve um erro, renicie a pagina e tente novamente!',\r\n  'application/without-permission': 'Ops! Parece que você não tem permissões para realizar esta ação!',\r\n  'application/without-permission-level': 'Você não permissões suficientes para realizar esta ação.',\r\n  'application/document-not-found': 'Ops! Houve um erro, renicie a pagina e tente novamente!',\r\n  'application/documen-without-identifier': 'Ops! Houve um erro, renicie a pagina e tente novamente!',\r\n  'application/need-credit': 'Ops! Houve um erro, renicie a pagina e tente novamente!',\r\n\r\n  'auth/email-already-in-use': 'Este endereço de e-mail já está sendo utilizado.',\r\n  'auth/weak-password': 'Sua senha não é forte o suficiente. Adicione números, letras maiúsculas e minúsculas.',\r\n  'auth/invalid-email': 'O endereço e-mail é invalido.',\r\n  'auth/account-exists-with-different-credential': 'E-mail já registrado! realize o login com e-mail e senha.',\r\n  'auth/email-already-exists': 'Este endereço de e-mail já está sendo utilizado.',\r\n  'auth/invalid-credential': 'Sua credencial está inválida.',\r\n  'auth/wrong-password': 'O e-mail ou senha está inválido.',\r\n  'auth/user-not-found': 'O e-mail ou senha está inválido.',\r\n  'auth/user-mismatch': 'O e-mail ou senha está inválido.',\r\n  'auth/invalid-verification-code': 'O código da verificação está inválido.',\r\n  'auth/invalid-verification-id': 'Sua credencial está inválida.',\r\n  'auth/requires-recent-login': 'Por favor deslogue do aplicativo e entre novamente.'\r\n};\r\n\r\n/**\r\n * Retorna a mensagem de erro correspondente a um determinado código de erro.\r\n *\r\n * @param errorCode O código de erro.\r\n * @param defaultMessage A mensagem de erro padrão a ser usada se não houver nenhuma mensagem correspondente ao código de erro fornecido.\r\n * @returns A mensagem de erro correspondente ao código de erro fornecido, ou a mensagem de erro padrão se não houver nenhuma mensagem correspondente.\r\n */\r\nexport function getApiError(\r\n  errorCode: string,\r\n  defaultMessage = 'Não foi possível concluir sua solicitação, por favor tente novamente.'\r\n): string {\r\n  return apiErrosTranslate[errorCode] ?? defaultMessage;\r\n}\r\n","import { getApiError } from '../resources/apiErrosTranslate';\r\n\r\n/**\r\n * Representa um erro de API com código, mensagem e status HTTP.\r\n */\r\nexport class ApiError {\r\n  /**\r\n   * A mensagem de erro.\r\n   * @type {string}\r\n   */\r\n  public readonly message: string;\r\n\r\n  /**\r\n   * O código de erro.\r\n   * @type {string}\r\n   */\r\n  public readonly code: string;\r\n\r\n  /**\r\n   * O status HTTP associado ao erro.\r\n   * @type {number}\r\n   */\r\n  public readonly statusCode: number;\r\n\r\n  /**\r\n   * Cria uma instância de um erro de API com código, mensagem e status HTTP.\r\n   *\r\n   * @param code - O código de erro.\r\n   * @param statusCode - O status HTTP associado ao erro.\r\n   */\r\n  constructor(code: string, statusCode: number) {\r\n    this.message = getApiError(code);\r\n    this.code = code;\r\n    this.statusCode = statusCode;\r\n  }\r\n}\r\n","/**\r\n * Representa um erro da aplicação com título e mensagem.\r\n */\r\nexport class AppError {\r\n  /**\r\n   * O título do erro.\r\n   * @type {string}\r\n   */\r\n  public readonly message: string;\r\n\r\n  /**\r\n   * A mensagem do erro.\r\n   * @type {string}\r\n   */\r\n  public readonly title: string;\r\n\r\n  /**\r\n   * Cria uma instância de um erro da aplicação com título e mensagem.\r\n   *\r\n   * @param title - O título do erro.\r\n   * @param message - A mensagem do erro.\r\n   */\r\n  constructor(title: string, message: string) {\r\n    this.title = title;\r\n    this.message = message;\r\n  }\r\n}\r\n","/**\r\n * Erro lançado quando um documento específico não é encontrado.\r\n */\r\nexport class DocumentNotFoundError extends Error {\r\n  /**\r\n   * Cria uma instância de um erro `DocumentNotFoundError` com uma mensagem formatada para o Id do documento não encontrado.\r\n   *\r\n   * @param id - O Id do documento não encontrado.\r\n   */\r\n  constructor(id: string) {\r\n    super(`Document '${id}' was not found.`);\r\n\r\n    this.name = 'DocumentNotFoundError';\r\n  }\r\n}\r\n","import { DocumentReference, Timestamp } from '@angular/fire/firestore';\r\n\r\n/**\r\n * Converte um objeto do `Firestore` em objetos `JavaScript` nativos, convertendo campos de data/hora em objetos `Date`.\r\n *\r\n * @param obj - O objeto a ser convertido para objetos JavaScript nativos\r\n * @returns O objeto convertido para objetos JavaScript nativos\r\n */\r\nexport function toNativeTypes(obj: any): any {\r\n  if (obj === null || typeof obj !== 'object' || obj instanceof DocumentReference) {\r\n    return obj;\r\n  }\r\n\r\n  if (obj instanceof Timestamp) {\r\n    return obj.toDate();\r\n  }\r\n\r\n  if (Array.isArray(obj)) {\r\n    return obj.map(toNativeTypes);\r\n  }\r\n\r\n  const clone: Record<string, unknown> = {};\r\n\r\n  Object.keys(obj).forEach(key => {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n      clone[key] = toNativeTypes(obj[key]);\r\n    }\r\n  });\r\n\r\n  return clone;\r\n}\r\n","import { DocumentData, DocumentSnapshot } from '@angular/fire/firestore';\r\nimport { toNativeTypes } from './toNativeTypes';\r\n\r\n/**\r\n * Converte um `DocumentSnapshot` do Firestore em um objeto do tipo `T`, adicionando o Id do documento ao objeto.\r\n *\r\n * @template T - O tipo de objeto a ser retornado\r\n * @param document - O `DocumentSnapshot` do Firestore a ser convertido em objeto\r\n * @param hasTimestamp - Indica se o objeto deve ter seus campos de data/hora convertidos em tipos nativos (`Date`)\r\n * @returns {T} O objeto convertido do tipo `T`\r\n */\r\nexport function ofFirestore<T>(document: DocumentSnapshot<DocumentData>, hasTimestamp = false): T {\r\n  const data = { id: document.id, ...document.data() };\r\n\r\n  if (hasTimestamp) {\r\n    return toNativeTypes(data);\r\n  }\r\n\r\n  return data as T;\r\n}\r\n","import { DocumentReference, FieldValue } from '@angular/fire/firestore';\r\n\r\n/**\r\n * Converte um modelo em um objeto que pode ser salvo no `Firestore`.\r\n *\r\n * @param obj - Um modelo a ser convertido em um objeto para o `Firestore`\r\n * @returns O objeto convertido para o `Firestore`\r\n */\r\nexport function toFirestore(obj: any): any {\r\n  if (obj === null || typeof obj !== 'object' || obj instanceof FieldValue || obj instanceof DocumentReference) {\r\n    return obj;\r\n  }\r\n\r\n  if (obj instanceof Date) {\r\n    return new Date(obj.getTime());\r\n  }\r\n\r\n  if (Array.isArray(obj)) {\r\n    return obj.map(toFirestore);\r\n  }\r\n\r\n  const clone: Record<string, unknown> = {};\r\n\r\n  Object.keys(obj).forEach(key => {\r\n    if (obj[key] !== undefined && Object.prototype.hasOwnProperty.call(obj, key)) {\r\n      clone[key] = toFirestore(obj[key]);\r\n    }\r\n  });\r\n\r\n  return clone;\r\n}\r\n","import {\r\n  addDoc,\r\n  collection,\r\n  CollectionReference,\r\n  deleteDoc,\r\n  doc,\r\n  docSnapshots,\r\n  Firestore,\r\n  getDoc,\r\n  getDocs,\r\n  orderBy as queryOrderBy,\r\n  OrderByDirection,\r\n  limit as queryLimit,\r\n  query,\r\n  serverTimestamp,\r\n  setDoc,\r\n  SetOptions,\r\n  updateDoc,\r\n  where,\r\n  WhereFilterOp,\r\n  Query,\r\n  QueryCompositeFilterConstraint,\r\n  QueryConstraint,\r\n  QueryNonFilterConstraint\r\n} from '@angular/fire/firestore';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { DocumentNotFoundError } from '../exceptions/DocumentNotFoundError';\r\nimport { AddDocument, FirebaseWhere, SetDocument, UpdateDocument } from '../typings/repoTypes';\r\nimport { ofFirestore } from './ofFirestore';\r\nimport { toFirestore } from './toFirestore';\r\nimport { Model } from './Model';\r\n\r\ntype WriteOptions = {\r\n  /**\r\n   * Adicionar atributos `createdAt` em criações e `updatedAt` em atualizações\r\n   */\r\n  timestamps: boolean;\r\n};\r\n\r\ntype ReadOptions = {\r\n  /**\r\n   * Converter atributos `createdAt` e `updatedAt` no tipo `Date` do JavaScript\r\n   */\r\n  timestamps: boolean;\r\n};\r\n\r\n/**\r\n * A interface do serviço Cloud Firestore.\r\n *\r\n * Não chame esse construtor diretamente.\r\n * Em vez disso, crie um repositório e estenda o comportamento\r\n *\r\n * @template T - O tipo de modelo que representa os documentos armazenados no Firestore.\r\n */\r\nexport abstract class FirebaseAbstract<T extends Model> {\r\n  /**\r\n   * @param firestore - Referência do Firestore\r\n   * @param collectionName - Nome da coleção no Firestore\r\n   */\r\n  public constructor(protected firestore: Firestore, protected collectionName: string) {}\r\n\r\n  /**\r\n   * Adiciona um novo documento ao Firestore.\r\n   *\r\n   * @param data - Um objeto contendo os dados do novo documento.\r\n   * @param options - Um objeto para configurar o comportamento de escrita.\r\n   * @returns Uma `Promise` resolvida com o id do documento criado.\r\n   */\r\n  public async add(data: AddDocument<T>, options: WriteOptions = { timestamps: true }): Promise<string> {\r\n    const clone = toFirestore(data);\r\n\r\n    if (options.timestamps) {\r\n      clone.createdAt = serverTimestamp();\r\n      clone.updatedAt = null;\r\n    }\r\n\r\n    delete clone.id;\r\n\r\n    const { id } = await addDoc(this.collection(), clone);\r\n\r\n    return id;\r\n  }\r\n\r\n  /**\r\n   * Atualiza um documento existente no Firestore.\r\n   *\r\n   * @param data - Um objeto contendo os dados a serem alterados.\r\n   * @param options - Um objeto para configurar o comportamento de escrita.\r\n   * @returns Uma `Promise` resolvida vazia.\r\n   */\r\n  public update(data: UpdateDocument<T>, options: WriteOptions = { timestamps: true }): Promise<void> {\r\n    const clone = toFirestore(data);\r\n\r\n    if (options.timestamps) {\r\n      clone.updatedAt = serverTimestamp();\r\n      delete clone.createdAt;\r\n    }\r\n\r\n    delete clone.id;\r\n\r\n    const docRef = doc(this.collection(), data.id);\r\n\r\n    return updateDoc(docRef, clone);\r\n  }\r\n\r\n  /**\r\n   * Grava no documento referenciado pelo `id` especificado. Se\r\n   * o documento ainda não existe, ele será criado. Se você fornecer `merge`\r\n   * ou `mergeFields`, os dados fornecidos podem ser mesclados em um documento existente.\r\n   *\r\n   * @param data - Um objeto contendo os dados a serem adicionados ou alterados.\r\n   * @param options - Um objeto para configurar o comportamento de escrita.\r\n   * @returns Uma `Promise` resolvida vazia.\r\n   */\r\n  public set(data: SetDocument<T>, options: SetOptions & WriteOptions = { timestamps: true }): Promise<void> {\r\n    const clone = toFirestore(data);\r\n\r\n    if (options.timestamps) {\r\n      clone.createdAt = serverTimestamp();\r\n      clone.updatedAt = null;\r\n    }\r\n\r\n    delete clone.id;\r\n\r\n    const docRef = doc(this.collection(), data.id);\r\n\r\n    return setDoc(docRef, clone, options);\r\n  }\r\n\r\n  /**\r\n   * Exclui o documento referenciado pelo `id` especificado.\r\n   *\r\n   * @param id - O id do documento a ser excluído.\r\n   * @returns Uma `Promise` resolvida vazia.\r\n   */\r\n  public delete(id: string): Promise<void> {\r\n    return deleteDoc(doc(this.collection(), id));\r\n  }\r\n\r\n  /**\r\n   * Busca um documento pelo seu id.\r\n   *\r\n   * @param id - O id do documento a ser buscado.\r\n   * @param options - Um objeto para configurar o comportamento de leitura.\r\n   * @throws {DocumentNotFoundError}\r\n   * @returns Uma `Promise` resolvida com o conteúdo do documento.\r\n   */\r\n  public async getById<U extends T = T>(id: string, options: ReadOptions = { timestamps: true }): Promise<U> {\r\n    const docSnap = await getDoc(doc(this.collection(), id));\r\n\r\n    if (!docSnap.exists()) {\r\n      throw new DocumentNotFoundError(id);\r\n    }\r\n\r\n    return ofFirestore(docSnap, options.timestamps);\r\n  }\r\n\r\n  /**\r\n   * Busca um documento pelo seu id.\r\n   *\r\n   * @param id - O id do documento a ser buscado.\r\n   * @param options - Um objeto para configurar o comportamento de leitura.\r\n   * @returns Um `Observable` para eventos.\r\n   */\r\n  public getAsyncById<U extends T = T>(id: string, options: ReadOptions = { timestamps: true }): Observable<U | null> {\r\n    const docRef = doc(this.collection(), id);\r\n\r\n    return docSnapshots(docRef).pipe(\r\n      map(docSnap => (docSnap.exists() ? ofFirestore(docSnap, options.timestamps) : null))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Busca documentos por seus Ids.\r\n   *\r\n   * @param ids - Os ids dos documentos a serem buscados.\r\n   * @param options - Um objeto para configurar o comportamento de leitura.\r\n   * @returns Uma `Promise` resolvida com o conteúdo dos documentos.\r\n   */\r\n  public async getByIds<U extends T = T>(ids: string[], options: ReadOptions = { timestamps: true }): Promise<U[]> {\r\n    const promises = ids.map(id => this.getById<U>(id, options));\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  /**\r\n   * Busca todos os documentos da coleção.\r\n   *\r\n   * @param options - Um objeto para configurar o comportamento de leitura.\r\n   * @returns Uma `Promise` resolvida com o conteúdo dos documentos.\r\n   */\r\n  public async getAll<U extends T = T>(options: ReadOptions = { timestamps: true }): Promise<U[]> {\r\n    return this.getDocs(this.collection(), options);\r\n  }\r\n\r\n  /**\r\n   * Recupera documentos da coleção com base no campo, operador e valor fornecidos, bem como em opções adicionais.\r\n   *\r\n   * @async\r\n   * @param field - A chave do campo pelo qual os documentos devem ser filtrados.\r\n   * @param operator - O operador a ser usado na filtragem (por exemplo, \"==\" ou \">\").\r\n   * @param value - O valor a ser comparado na filtragem.\r\n   * @param limit - O número máximo de documentos a serem retornados.\r\n   * @param orderBy - A chave do campo pelo qual os resultados devem ser ordenados.\r\n   * @param orderByDirection - A direção na qual os resultados devem ser ordenados.\r\n   * @param options - As opções adicionais para a leitura dos documentos.\r\n   * @returns Uma `Promise` resolvida com um array de documentos `T`.\r\n   */\r\n  protected async getWhere<U extends T = T>(\r\n    field: keyof T,\r\n    operator: WhereFilterOp,\r\n    value: unknown,\r\n    limit: number | null = null,\r\n    orderBy: keyof T | null = null,\r\n    orderByDirection: OrderByDirection | null = null,\r\n    options: ReadOptions = { timestamps: true }\r\n  ): Promise<U[]> {\r\n    const queryConstraints: QueryConstraint[] = [where(field as string, operator, value)];\r\n\r\n    if (limit) {\r\n      queryConstraints.push(queryLimit(limit));\r\n    }\r\n\r\n    if (orderBy) {\r\n      queryConstraints.push(queryOrderBy(orderBy as string, orderByDirection || 'asc'));\r\n    }\r\n\r\n    const q = query(this.collection(), ...queryConstraints);\r\n\r\n    return this.getDocs(q, options);\r\n  }\r\n\r\n  /**\r\n   * Recupera vários documentos da coleção com base nos filtros fornecidos e opções adicionais.\r\n   *\r\n   * @async\r\n   * @param filters - Um array de objetos de filtro Firebase, cada um contendo um campo, um operador e um valor.\r\n   * @param limit - O número máximo de documentos a serem retornados.\r\n   * @param orderBy - A chave do campo pelo qual os resultados devem ser ordenados.\r\n   * @param orderByDirection - A direção na qual os resultados devem ser ordenados.\r\n   * @param options - As opções adicionais para a leitura dos documentos.\r\n   * @returns Uma `Promise` resolvida com um array de documentos `T`.\r\n   */\r\n  protected async getWhereMany<U extends T = T>(\r\n    filters: FirebaseWhere<T>[],\r\n    limit: number | null = null,\r\n    orderBy: keyof T | null = null,\r\n    orderByDirection: OrderByDirection | null = null,\r\n    options: ReadOptions = { timestamps: true }\r\n  ): Promise<U[]> {\r\n    const queryConstraints: QueryConstraint[] = filters.map(filter => {\r\n      if (Array.isArray(filter)) {\r\n        return where(filter[0] as string, filter[1], filter[2]);\r\n      } else {\r\n        return where(filter.field as string, filter.operator, filter.value);\r\n      }\r\n    });\r\n\r\n    if (orderBy) {\r\n      queryConstraints.push(queryOrderBy(orderBy as string, orderByDirection || 'asc'));\r\n    }\r\n\r\n    if (limit) {\r\n      queryConstraints.push(queryLimit(limit));\r\n    }\r\n\r\n    const q = query(this.collection(), ...queryConstraints);\r\n\r\n    return this.getDocs(q, options);\r\n  }\r\n\r\n  /**\r\n   * Recupera o primeiro documento da coleção com base no campo, operador e valor fornecidos, bem como em opções adicionais.\r\n   *\r\n   * @async\r\n   * @param field - A chave do campo pelo qual o documento deve ser filtrado.\r\n   * @param operator - O operador a ser usado na filtragem (por exemplo, \"==\" ou \">\").\r\n   * @param value - O valor a ser comparado na filtragem.\r\n   * @param orderBy - A chave do campo pelo qual os resultados devem ser ordenados.\r\n   * @param orderByDirection - A direção na qual os resultados devem ser ordenados.\r\n   * @param options - As opções adicionais para a leitura do documento.\r\n   * @returns Uma `Promise` resolvida com um documento `T` ou `null` se nenhum documento for encontrado.\r\n   */\r\n  protected async getOneWhere<U extends T = T>(\r\n    field: keyof T,\r\n    operator: WhereFilterOp,\r\n    value: unknown,\r\n    orderBy: keyof T | null = null,\r\n    orderByDirection: OrderByDirection | null = null,\r\n    options: ReadOptions = { timestamps: true }\r\n  ): Promise<U | null> {\r\n    const documents = await this.getWhere<U>(field, operator, value, 1, orderBy, orderByDirection, options);\r\n    return documents.length ? documents[0] : null;\r\n  }\r\n\r\n  /**\r\n   * Recupera o primeiro documento da coleção com base nos filtros fornecidos e opções adicionais.\r\n   *\r\n   * @async\r\n   * @param filters - Um array de objetos de filtro Firebase, cada um contendo um campo, um operador e um valor.\r\n   * @param orderBy - A chave do campo pelo qual os resultados devem ser ordenados.\r\n   * @param orderByDirection - A direção na qual os resultados devem ser ordenados.\r\n   * @param options - As opções adicionais para a leitura do documento.\r\n   * @returns Uma `Promise` resolvida com um documento `T` ou `null` se nenhum documento for encontrado.\r\n   */\r\n  protected async getOneWhereMany<U extends T = T>(\r\n    filters: FirebaseWhere<T>[],\r\n    orderBy: keyof T | null = null,\r\n    orderByDirection: OrderByDirection | null = null,\r\n    options: ReadOptions = { timestamps: true }\r\n  ): Promise<U | null> {\r\n    const documents = await this.getWhereMany<U>(filters, 1, orderBy, orderByDirection, options);\r\n    return documents.length ? documents[0] : null;\r\n  }\r\n\r\n  /**\r\n   * Cria uma nova instância imutável de {@link Query} que também é estendida para\r\n   * incluir restrições de consulta adicionais.\r\n   *\r\n   * @param compositeFilter - A {@link QueryCompositeFilterConstraint} a\r\n   * ser aplicada. Crie uma {@link QueryCompositeFilterConstraint} usando {@link and} ou\r\n   * {@link or}.\r\n   * @param queryConstraints - Adicionais {@link QueryNonFilterConstraint}s a\r\n   * serem aplicadas (por exemplo, {@link orderBy}, {@link limit}).\r\n   * @throws Se qualquer uma das restrições de consulta fornecidas não puderem ser combinadas com as\r\n   * restrições existentes ou novas.\r\n   */\r\n  protected query(\r\n    compositeFilter: QueryCompositeFilterConstraint,\r\n    ...queryConstraints: QueryNonFilterConstraint[]\r\n  ): Query;\r\n\r\n  /**\r\n   * Cria uma nova instância imutável de {@link Query} que também é estendida para\r\n   * incluir restrições de consulta adicionais.\r\n   *\r\n   * @param queryConstraints - A lista de {@link QueryConstraint}s a serem aplicadas.\r\n   * @throws Se qualquer uma das restrições de consulta fornecidas não puderem ser combinadas com as\r\n   * restrições existentes ou novas.\r\n   */\r\n  protected query(...queryConstraints: QueryConstraint[]): Query;\r\n\r\n  protected query(...queries: any): Query {\r\n    return query(this.collection(), ...queries);\r\n  }\r\n\r\n  /**\r\n   * Realiza uma consulta no Firestore com base nas restrições de consulta fornecidas.\r\n   *\r\n   * @param query - A instância de `Query` a ser usada como base para as restrições.\r\n   * @param options - Um objeto para configurar o comportamento de leitura.\r\n   * @returns Uma `Promise` resolvida com um array de documentos `T`.\r\n   */\r\n  protected async getDocs<U extends T = T>(query: Query, options: ReadOptions = { timestamps: true }): Promise<U[]> {\r\n    const { docs } = await getDocs(query);\r\n\r\n    return docs.map(document => ofFirestore(document, options.timestamps));\r\n  }\r\n\r\n  /**\r\n   * Obtém uma instância `CollectionReference` que se refere à coleção no caminho absoluto especificado por `collectionName`.\r\n   *\r\n   * @returns A instância de `CollectionReference`.\r\n   */\r\n  protected collection(): CollectionReference {\r\n    return collection(this.firestore, this.collectionName);\r\n  }\r\n}\r\n","/**\r\n * Calcula a idade a partir da data de nascimento.\r\n *\r\n * @param birthDate - Data de nascimento.\r\n * @returns Idade em anos.\r\n */\r\nexport function calculateAge(birthDate: Date): number {\r\n  const today = new Date();\r\n\r\n  let age = calculateYearDifference(today, birthDate);\r\n\r\n  if (isBirthdayNotReachedThisYear(today, birthDate)) {\r\n    age--;\r\n  }\r\n\r\n  return age;\r\n}\r\n\r\nfunction calculateYearDifference(date1: Date, date2: Date): number {\r\n  return date1.getFullYear() - date2.getFullYear();\r\n}\r\n\r\nfunction isBirthdayNotReachedThisYear(today: Date, birthDate: Date): boolean {\r\n  const monthDifference = today.getMonth() - birthDate.getMonth();\r\n  const dayDifference = today.getDate() - birthDate.getDate();\r\n\r\n  return monthDifference < 0 || (monthDifference === 0 && dayDifference < 0);\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { calculateAge } from '../utils/calculateAge';\r\n\r\n/**\r\n * Pipe para exibir a idade com base na data de nascimento.\r\n * Transforma uma data de nascimento em idade (em anos).\r\n */\r\n@Pipe({\r\n  standalone: true,\r\n  name: 'age'\r\n})\r\nexport class AgePipe implements PipeTransform {\r\n  /**\r\n   * Transforma a data de nascimento em idade.\r\n   *\r\n   * @param birthDateInput A data de nascimento, em formato Date ou string.\r\n   * @returns A idade, em anos.\r\n   */\r\n  transform(birthDateInput: Date | string): number {\r\n    return calculateAge(new Date(birthDateInput));\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n/**\r\n * Pipe para filtrar um array de objetos, com base em um termo de pesquisa.\r\n * As propriedades dos objetos que correspondem ao termo de pesquisa são retornadas.\r\n */\r\n@Pipe({\r\n  standalone: true,\r\n  name: 'filter',\r\n  pure: false\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n  /**\r\n   * Transforma a lista de itens, filtrando com base no termo fornecido.\r\n   * Também recebe uma lista de chaves a serem ignoradas durante a pesquisa.\r\n   *\r\n   * @param items Lista de itens para filtrar.\r\n   * @param term Uma string para comparar com todas as propriedades da lista.\r\n   * @param excludes Lista de chaves que serão ignoradas durante a pesquisa.\r\n   * @returns Retorna uma lista de itens que correspondem ao termo.\r\n   */\r\n  transform(items: Record<string, any>[], term: string, excludes: string[] = []): Record<string, any>[] {\r\n    if (!term || !items) {\r\n      return items;\r\n    }\r\n\r\n    const toCompare = term.toLowerCase();\r\n\r\n    function checkInside(item: any, term: string): boolean {\r\n      if (typeof item === 'string' && item.toString().toLowerCase().includes(toCompare)) {\r\n        return true;\r\n      }\r\n\r\n      for (const property in item) {\r\n        if (item[property] === null || item[property] === undefined || excludes.includes(property)) {\r\n          continue;\r\n        }\r\n\r\n        if (typeof item[property] === 'object') {\r\n          if (checkInside(item[property], term)) {\r\n            return true;\r\n          }\r\n        } else if (item[property]?.toString().toLowerCase().includes(toCompare)) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    return items.filter(item => {\r\n      return checkInside(item, term);\r\n    });\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\r\n\r\n/**\r\n * Pipe para contornar a segurança e confiar em conteúdo dinâmico (HTML, CSS, JavaScript, URLs, etc.).\r\n * Utiliza o serviço DomSanitizer para retornar conteúdo seguro e evita ataques de Cross-site Scripting (XSS).\r\n */\r\n@Pipe({\r\n  standalone: true,\r\n  name: 'safe'\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n\r\n  /**\r\n   * Transforma o valor fornecido em um conteúdo seguro, de acordo com o tipo especificado.\r\n   *\r\n   * @param value - O valor a ser transformado em conteúdo seguro.\r\n   * @param type - O tipo de conteúdo seguro (html, style, script, url ou resourceUrl).\r\n   * @returns Um objeto `SafeHtml`, `SafeStyle`, `SafeScript`, `SafeUrl` ou `SafeResourceUrl`, conforme o tipo especificado.\r\n   */\r\n  public transform(\r\n    value: string,\r\n    type: 'html' | 'style' | 'script' | 'url' | 'resourceUrl'\r\n  ): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\r\n    switch (type) {\r\n      case 'html':\r\n        return this.sanitizer.bypassSecurityTrustHtml(value);\r\n      case 'style':\r\n        return this.sanitizer.bypassSecurityTrustStyle(value);\r\n      case 'script':\r\n        return this.sanitizer.bypassSecurityTrustScript(value);\r\n      case 'url':\r\n        return this.sanitizer.bypassSecurityTrustUrl(value);\r\n      case 'resourceUrl':\r\n        return this.sanitizer.bypassSecurityTrustResourceUrl(value);\r\n      default:\r\n        throw new Error(`Invalid safe type specified: ${type}`);\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Abrevia o sobrenome de uma determinada string de nome completo.\r\n *\r\n * @param name - A string com o nome completo.\r\n * @returns A string com o nome abreviado.\r\n */\r\nexport function abbreviateLastName(name: string): string {\r\n  const nameParts = splitName(name);\r\n  const firstName = capitalizeFirstName(nameParts);\r\n  const abbreviatedLastName = abbreviateAndCapitalizeLastName(nameParts);\r\n\r\n  return `${firstName} ${abbreviatedLastName}`.trim();\r\n}\r\n\r\nfunction splitName(name: string): string[] {\r\n  return name.toLowerCase().trim().split(' ');\r\n}\r\n\r\nfunction capitalizeFirstName(nameParts: string[]): string {\r\n  const firstName = nameParts[0];\r\n  return firstName.charAt(0).toUpperCase() + firstName.slice(1);\r\n}\r\n\r\nfunction abbreviateAndCapitalizeLastName(nameParts: string[]): string {\r\n  const isLastNamePresent = nameParts.length > 1;\r\n\r\n  if (isLastNamePresent) {\r\n    const lastName = nameParts[nameParts.length - 1];\r\n    return lastName.charAt(0).toUpperCase() + '.';\r\n  }\r\n\r\n  return '';\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { abbreviateLastName } from '../utils/abbreviateLastName';\r\n\r\n/**\r\n * Pipe para abreviar o sobrenome de um nome completo.\r\n * Transforma um nome completo em uma string com o primeiro nome e o sobrenome abreviado.\r\n */\r\n@Pipe({\r\n  standalone: true,\r\n  name: 'shortName'\r\n})\r\nexport class ShortNamePipe implements PipeTransform {\r\n  /**\r\n   * Transforma o nome completo fornecido em uma string com o primeiro nome e o sobrenome abreviado.\r\n   *\r\n   * @param name - O nome completo a ser transformado.\r\n   * @returns Uma string com o primeiro nome e o sobrenome abreviado.\r\n   */\r\n  transform(name: string): string {\r\n    if (!(name || '').length) {\r\n      return '';\r\n    }\r\n\r\n    return abbreviateLastName(name);\r\n  }\r\n}\r\n","import { DatePipe } from '@angular/common';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n/**\r\n * Pipe para exibir o tempo decorrido em formato amigável.\r\n * Transforma uma data em uma string representando o tempo decorrido\r\n */\r\n@Pipe({\r\n  standalone: true,\r\n  name: 'timeAgo'\r\n})\r\nexport class TimeAgoPipe extends DatePipe implements PipeTransform {\r\n  /**\r\n   * Transforma a data fornecida em uma string representando o tempo decorrido.\r\n   *\r\n   * @param value - A data a ser transformada.\r\n   * @returns Uma string representando o tempo decorrido desde a data fornecida até o momento atual.\r\n   */\r\n  override transform(value: Date | string | number | null | undefined): any {\r\n    if (!value) {\r\n      return '';\r\n    }\r\n\r\n    const d = new Date(value);\r\n\r\n    const now = new Date();\r\n    const seconds = Math.round(Math.abs((now.getTime() - d.getTime()) / 1000));\r\n\r\n    const minutes = Math.round(Math.abs(seconds / 60));\r\n    const hours = Math.round(Math.abs(minutes / 60));\r\n    const days = Math.round(Math.abs(hours / 24));\r\n\r\n    if (Number.isNaN(seconds)) {\r\n      return '';\r\n    }\r\n\r\n    if (seconds <= 60) {\r\n      return 'agora';\r\n    }\r\n\r\n    if (minutes <= 60) {\r\n      return `há ${minutes} min`;\r\n    }\r\n\r\n    if (hours <= 24) {\r\n      return `há ${hours} h`;\r\n    }\r\n\r\n    if (days <= 7) {\r\n      return `há ${days} d`;\r\n    }\r\n\r\n    if (d.getFullYear() === now.getFullYear()) {\r\n      return super.transform(value, \"dd 'de' MMM 'às' HH:mm\");\r\n    }\r\n\r\n    return super.transform(value, \"dd 'de' MMMM 'de' yyyy\");\r\n  }\r\n}\r\n","export const errorTailorConfig = {\r\n  errors: {\r\n    useValue: {\r\n      required: 'Este campo é requerido.',\r\n      cnpjInvalid: 'O valor informado não é um CNPJ válido.',\r\n      cpfInvalid: 'O valor informado não é um CPF válido.',\r\n      email: 'O valor informado não é um email válido.',\r\n      emailInvalid: 'O valor informado não é um email válido.',\r\n      fullNameInvalid: 'O valor informado precisa ter um nome e sobrenome.',\r\n      minlength: ({ requiredLength, actualLength }: any): string =>\r\n        `Tamanho mínimo ${requiredLength}, atual ${actualLength}`,\r\n      mask: 'O valor informado não está no formato correto.',\r\n      date: 'O valor informado não é uma data válida.',\r\n      max: 'O valor informado é maior que o permitido.',\r\n      min: 'O valor informado é menor que o permitido.'\r\n    }\r\n  }\r\n};\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\n/**\r\n * Converte uma imagem codificada em `base64` em um objeto `File`.\r\n *\r\n * @param base64Image - A string de imagem codificada em base64.\r\n * @returns O objeto `File` convertido.\r\n */\r\nexport function base64ToFile(base64Image: string): File {\r\n  const split = base64Image.split(',');\r\n  const type = split[0].replace('data:', '').replace(';base64', '');\r\n  const byteString = window.atob(split[1]);\r\n  const ab = new ArrayBuffer(byteString.length);\r\n  const ia = new Uint8Array(ab);\r\n  for (let i = 0; i < byteString.length; i += 1) {\r\n    ia[i] = byteString.charCodeAt(i);\r\n  }\r\n  const blob = new Blob([ab], {\r\n    type\r\n  });\r\n\r\n  const [, filetype] = blob.type.split('/');\r\n\r\n  return new File([blob], `${uuidv4()}.${filetype}`, {\r\n    type\r\n  });\r\n}\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\n/**\r\n * Gera um identificador único com um prefixo \"id\".\r\n *\r\n * @returns Uma string contendo um identificador único com o formato \"id{UUID}\".\r\n */\r\nexport function inputUUID() {\r\n  return `id${uuidv4()}`;\r\n}\r\n","export class LocalStorage {\r\n  static getItem<T = unknown>(key: string): T {\r\n    const item = localStorage.getItem(key);\r\n    return item ? JSON.parse(item) : null;\r\n  }\r\n\r\n  static setItem(key: string, value: unknown): void {\r\n    const stringify = JSON.stringify(value);\r\n    localStorage.setItem(key, stringify);\r\n  }\r\n\r\n  static removeItem(key: string): void {\r\n    localStorage.removeItem(key);\r\n  }\r\n\r\n  static clear(): void {\r\n    localStorage.clear();\r\n  }\r\n}\r\n","/**\r\n * Lê um `File` e retorna seus dados no formato de URL Data.\r\n *\r\n * @param file - O arquivo a ser lido.\r\n * @returns Uma `Promise` que resolve em uma `string` contendo a URL Data do arquivo ou `null`.\r\n */\r\nexport function readFileAsDataURL(file: File): Promise<string | null> {\r\n  return new Promise((resolve, reject) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = (): void => {\r\n      resolve(fileReader.result as string | null);\r\n    };\r\n    fileReader.onerror = (): void => {\r\n      reject();\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  });\r\n}\r\n","/**\r\n * Remove acentos de uma string.\r\n *\r\n * @param text A string de entrada a ser processada.\r\n * @returns A string com os acentos removidos.\r\n */\r\nexport function removeAccents(text: string): string {\r\n  const normalizationForm = 'NFD';\r\n  const accentPattern = /[\\u0300-\\u036f]/g;\r\n\r\n  return text.normalize(normalizationForm).replace(accentPattern, '');\r\n}\r\n","/**\r\n * Remova caracteres não numéricos de uma string.\r\n *\r\n * @param text A string de entrada a ser processada.\r\n * @returns A string contendo apenas caracteres de dígitos.\r\n */\r\nexport function removeNonDigits(text: string): string {\r\n  return text.replace(/\\D/g, '');\r\n}\r\n","import { AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\n/**\r\n * Valida um número de CNPJ (Cadastro Nacional da Pessoa Jurídica).\r\n *\r\n * @example <caption>Valide se o campo corresponde a um CNPJ válido</caption>\r\n * ```typescript\r\n * const control = new FormControl('11111111111111', cnpjValidator);\r\n *\r\n * console.log(control.errors); // {cnpjInvalid: true}\r\n * ```\r\n *\r\n * @param control - O `AbstractControl` do formulário a ser validado.\r\n * @returns Retorna um objeto de erro com a chave `cnpjInvalid` se o CNPJ for inválido, caso contrário retorna `null`.\r\n */\r\nexport function cnpjValidator(control: AbstractControl): ValidationErrors | null {\r\n  if (!control.value) {\r\n    return null;\r\n  }\r\n\r\n  const cnpj = String(control.value).replace(/\\D/g, '');\r\n\r\n  if (cnpj.length !== 14) {\r\n    return { cnpjInvalid: true };\r\n  }\r\n\r\n  if (\r\n    !cnpj ||\r\n    cnpj.length !== 14 ||\r\n    cnpj === '00000000000000' ||\r\n    cnpj === '11111111111111' ||\r\n    cnpj === '22222222222222' ||\r\n    cnpj === '33333333333333' ||\r\n    cnpj === '44444444444444' ||\r\n    cnpj === '55555555555555' ||\r\n    cnpj === '66666666666666' ||\r\n    cnpj === '77777777777777' ||\r\n    cnpj === '88888888888888' ||\r\n    cnpj === '99999999999999'\r\n  ) {\r\n    return { cnpjInvalid: true };\r\n  }\r\n\r\n  let tamanho = cnpj.length - 2;\r\n  let numeros = cnpj.substring(0, tamanho);\r\n  const digitos = cnpj.substring(tamanho);\r\n  let soma = 0;\r\n  let pos = tamanho - 7;\r\n\r\n  for (let i = tamanho; i >= 1; i--) {\r\n    soma += Number(numeros.charAt(tamanho - i)) * pos--;\r\n    if (pos < 2) {\r\n      pos = 9;\r\n    }\r\n  }\r\n\r\n  let resultado = (soma % 11 < 2 ? 0 : 11 - (soma % 11)).toString();\r\n  if (resultado !== digitos.charAt(0)) {\r\n    return { cnpjInvalid: true };\r\n  }\r\n\r\n  tamanho = tamanho + 1;\r\n  numeros = cnpj.substring(0, tamanho);\r\n  soma = 0;\r\n  pos = tamanho - 7;\r\n\r\n  for (let i = tamanho; i >= 1; i--) {\r\n    soma += Number(numeros.charAt(tamanho - i)) * pos--;\r\n    if (pos < 2) {\r\n      pos = 9;\r\n    }\r\n  }\r\n\r\n  resultado = (soma % 11 < 2 ? 0 : 11 - (soma % 11)).toString();\r\n  if (resultado !== digitos.charAt(1)) {\r\n    return { cnpjInvalid: true };\r\n  }\r\n\r\n  return null;\r\n}\r\n","import { AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\n/**\r\n * Valida um número de CPF (Cadastro de Pessoas Físicas).\r\n *\r\n * @example <caption>Valide se o campo corresponde a um CPF válido</caption>\r\n * ```typescript\r\n * const control = new FormControl('11111111111', cpfValidator);\r\n *\r\n * console.log(control.errors); // {cpfInvalid: true}\r\n * ```\r\n *\r\n * @param control - O `AbstractControl` do formulário a ser validado.\r\n * @returns Retorna um objeto de erro com a chave `cpfInvalid` se o CPF for inválido, caso contrário retorna `null`.\r\n */\r\nexport function cpfValidator(control: AbstractControl): ValidationErrors | null {\r\n  if (!control.value) {\r\n    return null;\r\n  }\r\n\r\n  const cpf = String(control.value).replace(/\\D/g, '');\r\n  if (cpf.length !== 11) {\r\n    return { cpfInvalid: true };\r\n  }\r\n\r\n  if (\r\n    cpf === '00000000000' ||\r\n    cpf === '11111111111' ||\r\n    cpf === '22222222222' ||\r\n    cpf === '33333333333' ||\r\n    cpf === '44444444444' ||\r\n    cpf === '55555555555' ||\r\n    cpf === '66666666666' ||\r\n    cpf === '77777777777' ||\r\n    cpf === '88888888888' ||\r\n    cpf === '99999999999'\r\n  ) {\r\n    return { cpfInvalid: true };\r\n  }\r\n\r\n  let soma = 0;\r\n  for (let i = 1; i <= 9; i += 1) {\r\n    soma = soma + parseInt(cpf.substring(i - 1, i), 10) * (11 - i);\r\n  }\r\n\r\n  let resto = (soma * 10) % 11;\r\n  if (resto === 10 || resto === 11) {\r\n    resto = 0;\r\n  }\r\n\r\n  if (resto !== parseInt(cpf.substring(9, 10), 10)) {\r\n    return { cpfInvalid: true };\r\n  }\r\n\r\n  soma = 0;\r\n  for (let i = 1; i <= 10; i += 1) {\r\n    soma = soma + parseInt(cpf.substring(i - 1, i), 10) * (12 - i);\r\n  }\r\n\r\n  resto = (soma * 10) % 11;\r\n  if (resto === 10 || resto === 11) {\r\n    resto = 0;\r\n  }\r\n\r\n  if (resto === parseInt(cpf.substring(10, 11), 10)) {\r\n    return null;\r\n  }\r\n\r\n  return { cpfInvalid: true };\r\n}\r\n","import { AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\n/**\r\n * Valida o formato do endereço de e-mail.\r\n *\r\n * @example <caption>Valide se o campo corresponde a um e-mail válido</caption>\r\n * ```typescript\r\n * const control = new FormControl('bad@', emailValidator);\r\n *\r\n * console.log(control.errors); // {emailInvalid: true}\r\n * ```\r\n *\r\n * @param control - O `AbstractControl` do formulário a ser validado.\r\n * @returns Retorna um objeto de erro com a chave `emailInvalid` se o e-mail for inválido, caso contrário retorna `null`.\r\n */\r\nexport function emailValidator(control: AbstractControl): ValidationErrors | null {\r\n  if (!control.value) {\r\n    return null;\r\n  }\r\n\r\n  const REGEX_EMAIL =\r\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n  if (REGEX_EMAIL.test(control.value.toLowerCase())) {\r\n    return null;\r\n  }\r\n\r\n  return { emailInvalid: true };\r\n}\r\n","import { AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\n/**\r\n * Valida o formato do nome completo de um controle de formulário fornecido.\r\n * Um nome completo deve conter pelo menos duas palavras e a segunda palavra deve ter mais de um caractere.\r\n *\r\n * @example <caption>Valide se o campo corresponde a um nome com sobrenome</caption>\r\n * ```typescript\r\n * const control = new FormControl('John', fullNameValidator);\r\n *\r\n * console.log(control.errors); // {fullNameInvalid: true}\r\n * ```\r\n *\r\n * @param control - O `AbstractControl` do formulário a ser validado.\r\n * @returns Retorna um objeto de erro com a chave `fullNameInvalid` se o nome completo for inválido, caso contrário retorna `null`.\r\n */\r\nexport function fullNameValidator(control: AbstractControl): ValidationErrors | null {\r\n  if (!control.value) {\r\n    return null;\r\n  }\r\n\r\n  const split = String(control.value).split(' ');\r\n  if (split.length > 1 && split[1].length > 1) {\r\n    return null;\r\n  }\r\n\r\n  return { fullNameInvalid: true };\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["limit","orderBy","queryLimit","queryOrderBy","uuidv4"],"mappings":"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"}